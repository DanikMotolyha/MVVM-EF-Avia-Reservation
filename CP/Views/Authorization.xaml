<Window x:Class="CP.Views.Authorization"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CP.Views"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        xmlns:vm="clr-namespace:CP.ViewModels"
        xmlns:converters="clr-namespace:CP.Converters"
        xmlns:valid="clr-namespace:CP.Other"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        Height="700" Width="500" ResizeMode="CanResize"  WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="True">
    <Window.DataContext>
        <vm:AuthorizationViewModel>
        </vm:AuthorizationViewModel>
    </Window.DataContext>
    <Window.Resources>
        <converters:SimpleConverter x:Key="convert"/>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction 
                        Command="{Binding BorderDragCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"  />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid>
                <materialDesign:ColorZone Background="#d42b2b" >
                    <StackPanel HorizontalAlignment="Right">
                        <Button Command="{Binding CloseWindowCommand}" materialDesign:ShadowAssist.ShadowDepth="Depth0" Height="30" Width="30" Padding="0" Background="#d42b2b" BorderBrush="#d42b2b">
                            <materialDesign:PackIcon Kind="WindowClose"  Height="30" Width="30"></materialDesign:PackIcon>
                        </Button>
                    </StackPanel>
                </materialDesign:ColorZone>
            </Grid>
        </Border>

        <Grid Grid.Row="1">
            <StackPanel Orientation="Horizontal" Background="#d42b2b" VerticalAlignment="Center">
                <materialDesign:PackIcon Kind="Airplane" Width="80" Height="80" Foreground="White" Margin="145,10,0,10" RenderTransformOrigin="0.5,0.5">
                    <materialDesign:PackIcon.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="45"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </materialDesign:PackIcon.RenderTransform>
                </materialDesign:PackIcon>
                <TextBlock Text="Air Flight" FontSize="35" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10" Foreground="#DDFFFFFF"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2">
            <StackPanel Orientation="Vertical">

                <StackPanel Orientation="Horizontal" Margin="0,120,0,0">
                    <materialDesign:PackIcon Kind="Account" Foreground="{Binding ElementName=name, Path=BorderBrush}"
                                             VerticalAlignment="Bottom" Margin="40,0,10,0" Width="50" Height="50"></materialDesign:PackIcon>
                    <TextBox x:Name="name" Width="350" materialDesign:HintAssist.Hint="Никнейм" materialDesign:HintAssist.IsFloating="True" FontSize="20">
                        <TextBox.Text>
                            <Binding  Path="Name"  UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <valid:NotEmptyValidationRule    ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                    <materialDesign:PackIcon Kind="Lock" Foreground="{Binding ElementName=password, Path=BorderBrush}" VerticalAlignment="Bottom" Margin="40,0,10,0" Width="50" Height="50"></materialDesign:PackIcon>
                    <PasswordBox x:Name="password" Width="350" MaxLength="8" materialDesign:HintAssist.Hint="Пароль" materialDesign:HintAssist.IsFloating="True" FontSize="20"
                                 materialDesign:TextFieldAssist.HasClearButton="True"/>
                </StackPanel>

                <Button Command="{Binding AuthorizationCommand}"
                         Content="ВОЙТИ"  Foreground="#FFFFFFFF" Margin="0,80,0,40" BorderBrush="{x:Null}" Width="200" Height="50" HorizontalAlignment="Center" FontSize="20">
                <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource convert}">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}"/>
                            <Binding ElementName="password"/>
                    </MultiBinding>
                </Button.CommandParameter>
                </Button>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,0">
                    <TextBlock><Hyperlink Command="{Binding RegistrationCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Foreground="Gray" FontSize="22" >Регистрация</Hyperlink></TextBlock>
                </StackPanel>
            </StackPanel>
        </Grid>

    </Grid>
</Window>
